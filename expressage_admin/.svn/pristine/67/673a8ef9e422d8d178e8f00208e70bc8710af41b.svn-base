package com.cndatacom.rbac.system.web.action;

import javax.annotation.Resource;

import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.cndatacom.common.service.IBaseService;
import com.cndatacom.common.web.action.SimpleActionSupport;
import com.cndatacom.rbac.pojo.ExpressageStage;
import com.cndatacom.rbac.system.service.ExpressageStageService;

/**
 * 
 * 类名: ExpressageStageAction</br> 
 * 包名：com.cndatacom.rbac.system.web.action </br> 
 * 描述: 驿站action</br>
 * 发布版本号：</br>
 * 开发人员： 朱恋青</br>
 * 创建时间： 2015-8-24
 */
@Controller
@Action("expressageStage")
@Scope("prototype")
@Namespace("/rbac/sys")
@Results( {
	  	@Result(name = "list",  location = "/rbac/sys/expressage/stage/expressageStageList.jsp", type = "dispatcher"),
	  	@Result(name = "input", location = "/rbac/sys/expressage/stage/expressageStageEdit.jsp", type = "dispatcher"),
		@Result(name = "reload", location = "expressageStage!list.action", type = "redirect"),
		@Result(name = "status", type = "json", params = { "root","validateInfo" }),
})
public class ExpressageStageAction extends SimpleActionSupport{
	
	private static final long serialVersionUID = 1L;
	@Resource
    private ExpressageStageService expressageStageService;
	
	private ExpressageStage expressageStage;
	private String stageId;
	
	/**
     * 查询列表
     * @return "list"
     * @throws Exception
     */
	@Override
	public String list() throws Exception {
		return super.list();
	}
	
	/**
     * 保存、增加实体
     * @return "reload"
     * @throws Exception
     */
	@Override
	public String save() throws Exception {
		super.save();
		return RELOAD;
	}

	/**
     * 删除实体
     * @return "reload"
     * @throws Exception
     */
	@Override
	public String delete() throws Exception {
		super.delete();
		return RELOAD;
	}

		
	
	/**
     * 编辑实体
     * @return "input"
     * @throws Exception
     */
	@Override
	public String input() throws Exception {
		if(stageId != null){
			expressageStage = expressageStageService.findUniqueBy("stageId", stageId);
		}
		return INPUT;
	}
	
	
	
	@Override
	protected Object createNewInstance() {
		return expressageStage;
	}

	@Override
	protected IBaseService getManager() {
		return expressageStageService;
	}

	@Override
	public Object getModel() {
		return getExpressageStage();
	}

	@Override
	public void setModel(Object obj) {
		setExpressageStage((ExpressageStage) obj);
	}

	public ExpressageStage getExpressageStage() {
		return expressageStage;
	}

	public void setExpressageStage(ExpressageStage expressageStage) {
		this.expressageStage = expressageStage;
	}

	public String getStageId() {
		return stageId;
	}

	public void setStageId(String stageId) {
		this.stageId = stageId;
	}
	
	
	
	
}
