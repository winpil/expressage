package com.cndatacom.rbac.system.web.action;

import javax.annotation.Resource;

import org.apache.commons.lang.StringUtils;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.cndatacom.common.orm.Page;
import com.cndatacom.common.service.IBaseService;
import com.cndatacom.common.web.action.SimpleActionSupport;
import com.cndatacom.rbac.pojo.ExpressageIdea;
import com.cndatacom.rbac.pojo.ExpressageOrder;
import com.cndatacom.rbac.system.service.ExpressageIdeaService;

/**
 * 
 * 类名: ExpressageIdeaAction</br> 
 * 包名：com.cndatacom.rbac.system.web.action </br> 
 * 描述: 举报投诉管理</br>
 * 发布版本号：</br>
 * 开发人员： 朱恋青</br>
 * 创建时间： 2016-10-8 
 * 公司 ：广州亚乐恒网络科技有限公司(http://www.aleven.cn/)</br>
 */
@Controller
@Action("expressageIdea")
@Scope("prototype")
@Namespace("/rbac/sys")
@Results( {
	  	@Result(name = "list1",  location = "/rbac/sys/expressage/idea/expressageIdea1List.jsp", type = "dispatcher"),
	  	@Result(name = "list2",  location = "/rbac/sys/expressage/idea/expressageIdea2List.jsp", type = "dispatcher"),
	  	@Result(name = "list3",  location = "/rbac/sys/expressage/idea/expressageIdea3List.jsp", type = "dispatcher"),
	  	@Result(name = "input", location = "/rbac/sys/expressage/idea/expressageIdeaEdit.jsp", type = "dispatcher"),
		@Result(name = "reload1", location = "expressageIdea!list1.action", type = "redirect"),
		@Result(name = "status", type = "json", params = { "root","validateInfo" }),
})
public class ExpressageIdeaAction extends SimpleActionSupport{
	
	private static final long serialVersionUID = 1L;
	@Resource
    private ExpressageIdeaService expressageIdeaService;
	
	private ExpressageIdea expressageIdea;
	private String ideaId;
	Page<ExpressageIdea> page = new Page<ExpressageIdea>();
	private String auName;//搜索框内容
	private String searchName;//搜索名
	private String type;//
	private String status;//
	/**
     * 查询列表
     * @return "list"
     * @throws Exception
     */
	public String list1() throws Exception {
		page.setStart(start);
		page.setLimit(limit);
		StringBuffer sb = new StringBuffer("from ExpressageIdea where 1=1 and type in ('1','4') ");
		
		if(StringUtils.isNotBlank(searchName)){
			sb.append(" and "+searchName+" like '%"+auName+"%'");
		}
		
		if(StringUtils.isNotBlank(type)){
			sb.append("and type = "+type);
		}
		if(StringUtils.isNotBlank(status)){
			sb.append("and status = "+status);
		}
		sb.append(" order by createDate desc");
		page = expressageIdeaService.findPage(page, sb.toString());
		setPage(page);
		return "list1";
	}
	
	/**
     * 保存、增加实体
     * @return "reload"
     * @throws Exception
     */
	@Override
	public String save() throws Exception {
		super.save();
		return RELOAD;
	}

	/**
     * 删除实体
     * @return "reload"
     * @throws Exception
     */
	@Override
	public String delete() throws Exception {
		super.delete();
		return RELOAD;
	}

		
	
//	/**
//     * 编辑实体
//     * @return "input"
//     * @throws Exception
//     */
//	@Override
//	public String input() throws Exception {
//		if(stageId != null){
//			expressageStage = expressageStageService.findUniqueBy("stageId", stageId);
//		}
//		return INPUT;
//	}
	
	
	
	@Override
	protected Object createNewInstance() {
		return expressageIdea;
	}

	@Override
	protected IBaseService getManager() {
		return expressageIdeaService;
	}

	@Override
	public Object getModel() {
		return getExpressageIdea();
	}

	@Override
	public void setModel(Object obj) {
		setExpressageIdea((ExpressageIdea) obj);
	}

	public ExpressageIdea getExpressageIdea() {
		return expressageIdea;
	}

	public void setExpressageIdea(ExpressageIdea expressageIdea) {
		this.expressageIdea = expressageIdea;
	}

	public String getIdeaId() {
		return ideaId;
	}

	public void setIdeaId(String ideaId) {
		this.ideaId = ideaId;
	}
	
	
	
	
}
